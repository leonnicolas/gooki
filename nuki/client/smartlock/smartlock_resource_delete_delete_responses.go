// Code generated by go-swagger; DO NOT EDIT.

package smartlock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SmartlockResourceDeleteDeleteReader is a Reader for the SmartlockResourceDeleteDelete structure.
type SmartlockResourceDeleteDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SmartlockResourceDeleteDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSmartlockResourceDeleteDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSmartlockResourceDeleteDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSmartlockResourceDeleteDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSmartlockResourceDeleteDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /smartlock/{smartlockId}] SmartlockResource_delete_delete", response, response.Code())
	}
}

// NewSmartlockResourceDeleteDeleteNoContent creates a SmartlockResourceDeleteDeleteNoContent with default headers values
func NewSmartlockResourceDeleteDeleteNoContent() *SmartlockResourceDeleteDeleteNoContent {
	return &SmartlockResourceDeleteDeleteNoContent{}
}

/*
SmartlockResourceDeleteDeleteNoContent describes a response with status code 204, with default header values.

Ok
*/
type SmartlockResourceDeleteDeleteNoContent struct {
}

// IsSuccess returns true when this smartlock resource delete delete no content response has a 2xx status code
func (o *SmartlockResourceDeleteDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this smartlock resource delete delete no content response has a 3xx status code
func (o *SmartlockResourceDeleteDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource delete delete no content response has a 4xx status code
func (o *SmartlockResourceDeleteDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this smartlock resource delete delete no content response has a 5xx status code
func (o *SmartlockResourceDeleteDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource delete delete no content response a status code equal to that given
func (o *SmartlockResourceDeleteDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the smartlock resource delete delete no content response
func (o *SmartlockResourceDeleteDeleteNoContent) Code() int {
	return 204
}

func (o *SmartlockResourceDeleteDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteNoContent ", 204)
}

func (o *SmartlockResourceDeleteDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteNoContent ", 204)
}

func (o *SmartlockResourceDeleteDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockResourceDeleteDeleteBadRequest creates a SmartlockResourceDeleteDeleteBadRequest with default headers values
func NewSmartlockResourceDeleteDeleteBadRequest() *SmartlockResourceDeleteDeleteBadRequest {
	return &SmartlockResourceDeleteDeleteBadRequest{}
}

/*
SmartlockResourceDeleteDeleteBadRequest describes a response with status code 400, with default header values.

Bad parameter
*/
type SmartlockResourceDeleteDeleteBadRequest struct {
}

// IsSuccess returns true when this smartlock resource delete delete bad request response has a 2xx status code
func (o *SmartlockResourceDeleteDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock resource delete delete bad request response has a 3xx status code
func (o *SmartlockResourceDeleteDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource delete delete bad request response has a 4xx status code
func (o *SmartlockResourceDeleteDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock resource delete delete bad request response has a 5xx status code
func (o *SmartlockResourceDeleteDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource delete delete bad request response a status code equal to that given
func (o *SmartlockResourceDeleteDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the smartlock resource delete delete bad request response
func (o *SmartlockResourceDeleteDeleteBadRequest) Code() int {
	return 400
}

func (o *SmartlockResourceDeleteDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteBadRequest ", 400)
}

func (o *SmartlockResourceDeleteDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteBadRequest ", 400)
}

func (o *SmartlockResourceDeleteDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockResourceDeleteDeleteUnauthorized creates a SmartlockResourceDeleteDeleteUnauthorized with default headers values
func NewSmartlockResourceDeleteDeleteUnauthorized() *SmartlockResourceDeleteDeleteUnauthorized {
	return &SmartlockResourceDeleteDeleteUnauthorized{}
}

/*
SmartlockResourceDeleteDeleteUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type SmartlockResourceDeleteDeleteUnauthorized struct {
}

// IsSuccess returns true when this smartlock resource delete delete unauthorized response has a 2xx status code
func (o *SmartlockResourceDeleteDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock resource delete delete unauthorized response has a 3xx status code
func (o *SmartlockResourceDeleteDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource delete delete unauthorized response has a 4xx status code
func (o *SmartlockResourceDeleteDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock resource delete delete unauthorized response has a 5xx status code
func (o *SmartlockResourceDeleteDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource delete delete unauthorized response a status code equal to that given
func (o *SmartlockResourceDeleteDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the smartlock resource delete delete unauthorized response
func (o *SmartlockResourceDeleteDeleteUnauthorized) Code() int {
	return 401
}

func (o *SmartlockResourceDeleteDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteUnauthorized ", 401)
}

func (o *SmartlockResourceDeleteDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteUnauthorized ", 401)
}

func (o *SmartlockResourceDeleteDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockResourceDeleteDeleteForbidden creates a SmartlockResourceDeleteDeleteForbidden with default headers values
func NewSmartlockResourceDeleteDeleteForbidden() *SmartlockResourceDeleteDeleteForbidden {
	return &SmartlockResourceDeleteDeleteForbidden{}
}

/*
SmartlockResourceDeleteDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SmartlockResourceDeleteDeleteForbidden struct {
}

// IsSuccess returns true when this smartlock resource delete delete forbidden response has a 2xx status code
func (o *SmartlockResourceDeleteDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock resource delete delete forbidden response has a 3xx status code
func (o *SmartlockResourceDeleteDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource delete delete forbidden response has a 4xx status code
func (o *SmartlockResourceDeleteDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock resource delete delete forbidden response has a 5xx status code
func (o *SmartlockResourceDeleteDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource delete delete forbidden response a status code equal to that given
func (o *SmartlockResourceDeleteDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the smartlock resource delete delete forbidden response
func (o *SmartlockResourceDeleteDeleteForbidden) Code() int {
	return 403
}

func (o *SmartlockResourceDeleteDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteForbidden ", 403)
}

func (o *SmartlockResourceDeleteDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /smartlock/{smartlockId}][%d] smartlockResourceDeleteDeleteForbidden ", 403)
}

func (o *SmartlockResourceDeleteDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
