// Code generated by go-swagger; DO NOT EDIT.

package advanced_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// DecentralWebhooksResourceGetGetReader is a Reader for the DecentralWebhooksResourceGetGet structure.
type DecentralWebhooksResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DecentralWebhooksResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDecentralWebhooksResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDecentralWebhooksResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDecentralWebhooksResourceGetGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/decentralWebhook] DecentralWebhooksResource_get_get", response, response.Code())
	}
}

// NewDecentralWebhooksResourceGetGetOK creates a DecentralWebhooksResourceGetGetOK with default headers values
func NewDecentralWebhooksResourceGetGetOK() *DecentralWebhooksResourceGetGetOK {
	return &DecentralWebhooksResourceGetGetOK{}
}

/*
DecentralWebhooksResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type DecentralWebhooksResourceGetGetOK struct {
	Payload []*models.DecentralWebhook
}

// IsSuccess returns true when this decentral webhooks resource get get o k response has a 2xx status code
func (o *DecentralWebhooksResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this decentral webhooks resource get get o k response has a 3xx status code
func (o *DecentralWebhooksResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource get get o k response has a 4xx status code
func (o *DecentralWebhooksResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this decentral webhooks resource get get o k response has a 5xx status code
func (o *DecentralWebhooksResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource get get o k response a status code equal to that given
func (o *DecentralWebhooksResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the decentral webhooks resource get get o k response
func (o *DecentralWebhooksResourceGetGetOK) Code() int {
	return 200
}

func (o *DecentralWebhooksResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /api/decentralWebhook][%d] decentralWebhooksResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *DecentralWebhooksResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /api/decentralWebhook][%d] decentralWebhooksResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *DecentralWebhooksResourceGetGetOK) GetPayload() []*models.DecentralWebhook {
	return o.Payload
}

func (o *DecentralWebhooksResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecentralWebhooksResourceGetGetUnauthorized creates a DecentralWebhooksResourceGetGetUnauthorized with default headers values
func NewDecentralWebhooksResourceGetGetUnauthorized() *DecentralWebhooksResourceGetGetUnauthorized {
	return &DecentralWebhooksResourceGetGetUnauthorized{}
}

/*
DecentralWebhooksResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type DecentralWebhooksResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this decentral webhooks resource get get unauthorized response has a 2xx status code
func (o *DecentralWebhooksResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decentral webhooks resource get get unauthorized response has a 3xx status code
func (o *DecentralWebhooksResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource get get unauthorized response has a 4xx status code
func (o *DecentralWebhooksResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this decentral webhooks resource get get unauthorized response has a 5xx status code
func (o *DecentralWebhooksResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource get get unauthorized response a status code equal to that given
func (o *DecentralWebhooksResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the decentral webhooks resource get get unauthorized response
func (o *DecentralWebhooksResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *DecentralWebhooksResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/decentralWebhook][%d] decentralWebhooksResourceGetGetUnauthorized ", 401)
}

func (o *DecentralWebhooksResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/decentralWebhook][%d] decentralWebhooksResourceGetGetUnauthorized ", 401)
}

func (o *DecentralWebhooksResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDecentralWebhooksResourceGetGetForbidden creates a DecentralWebhooksResourceGetGetForbidden with default headers values
func NewDecentralWebhooksResourceGetGetForbidden() *DecentralWebhooksResourceGetGetForbidden {
	return &DecentralWebhooksResourceGetGetForbidden{}
}

/*
DecentralWebhooksResourceGetGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DecentralWebhooksResourceGetGetForbidden struct {
}

// IsSuccess returns true when this decentral webhooks resource get get forbidden response has a 2xx status code
func (o *DecentralWebhooksResourceGetGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decentral webhooks resource get get forbidden response has a 3xx status code
func (o *DecentralWebhooksResourceGetGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource get get forbidden response has a 4xx status code
func (o *DecentralWebhooksResourceGetGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this decentral webhooks resource get get forbidden response has a 5xx status code
func (o *DecentralWebhooksResourceGetGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource get get forbidden response a status code equal to that given
func (o *DecentralWebhooksResourceGetGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the decentral webhooks resource get get forbidden response
func (o *DecentralWebhooksResourceGetGetForbidden) Code() int {
	return 403
}

func (o *DecentralWebhooksResourceGetGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/decentralWebhook][%d] decentralWebhooksResourceGetGetForbidden ", 403)
}

func (o *DecentralWebhooksResourceGetGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/decentralWebhook][%d] decentralWebhooksResourceGetGetForbidden ", 403)
}

func (o *DecentralWebhooksResourceGetGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
