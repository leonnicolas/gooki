// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIKeyAdvanced Api key advanced
//
// swagger:model ApiKey.Advanced
type APIKeyAdvanced struct {

	// country
	Country string `json:"country,omitempty"`

	// creation date
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creationDate,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// last post duration
	LastPostDuration int64 `json:"lastPostDuration,omitempty"`

	// last post succesful
	LastPostSuccesful bool `json:"lastPostSuccesful,omitempty"`

	// last successful post
	// Format: date-time
	LastSuccessfulPost strfmt.DateTime `json:"lastSuccessfulPost,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// restricted
	Restricted bool `json:"restricted,omitempty"`

	// status
	// Enum: [INACTIVE APPLIED TESTING ACTIVE]
	Status string `json:"status,omitempty"`

	// type
	// Enum: [ONLY_SECRET SHORT_RENTAL HEALTHCARE SMART_HOME OTHER]
	Type string `json:"type,omitempty"`

	// update date
	// Format: date-time
	UpdateDate strfmt.DateTime `json:"updateDate,omitempty"`

	// url
	URL string `json:"url,omitempty"`

	// webhook features
	// Unique: true
	WebhookFeatures []string `json:"webhookFeatures"`

	// webhook sent erroneous
	WebhookSentErroneous int32 `json:"webhookSentErroneous,omitempty"`

	// webhook sent successfully
	WebhookSentSuccessfully int32 `json:"webhookSentSuccessfully,omitempty"`

	// webhook status
	// Enum: [ACTIVE DEACTIVATED]
	WebhookStatus string `json:"webhookStatus,omitempty"`

	// webhook Url
	WebhookURL string `json:"webhookUrl,omitempty"`
}

// Validate validates this Api key advanced
func (m *APIKeyAdvanced) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastSuccessfulPost(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWebhookFeatures(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWebhookStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIKeyAdvanced) validateCreationDate(formats strfmt.Registry) error {
	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *APIKeyAdvanced) validateLastSuccessfulPost(formats strfmt.Registry) error {
	if swag.IsZero(m.LastSuccessfulPost) { // not required
		return nil
	}

	if err := validate.FormatOf("lastSuccessfulPost", "body", "date-time", m.LastSuccessfulPost.String(), formats); err != nil {
		return err
	}

	return nil
}

var apiKeyAdvancedTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INACTIVE","APPLIED","TESTING","ACTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiKeyAdvancedTypeStatusPropEnum = append(apiKeyAdvancedTypeStatusPropEnum, v)
	}
}

const (

	// APIKeyAdvancedStatusINACTIVE captures enum value "INACTIVE"
	APIKeyAdvancedStatusINACTIVE string = "INACTIVE"

	// APIKeyAdvancedStatusAPPLIED captures enum value "APPLIED"
	APIKeyAdvancedStatusAPPLIED string = "APPLIED"

	// APIKeyAdvancedStatusTESTING captures enum value "TESTING"
	APIKeyAdvancedStatusTESTING string = "TESTING"

	// APIKeyAdvancedStatusACTIVE captures enum value "ACTIVE"
	APIKeyAdvancedStatusACTIVE string = "ACTIVE"
)

// prop value enum
func (m *APIKeyAdvanced) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiKeyAdvancedTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APIKeyAdvanced) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

var apiKeyAdvancedTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ONLY_SECRET","SHORT_RENTAL","HEALTHCARE","SMART_HOME","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiKeyAdvancedTypeTypePropEnum = append(apiKeyAdvancedTypeTypePropEnum, v)
	}
}

const (

	// APIKeyAdvancedTypeONLYSECRET captures enum value "ONLY_SECRET"
	APIKeyAdvancedTypeONLYSECRET string = "ONLY_SECRET"

	// APIKeyAdvancedTypeSHORTRENTAL captures enum value "SHORT_RENTAL"
	APIKeyAdvancedTypeSHORTRENTAL string = "SHORT_RENTAL"

	// APIKeyAdvancedTypeHEALTHCARE captures enum value "HEALTHCARE"
	APIKeyAdvancedTypeHEALTHCARE string = "HEALTHCARE"

	// APIKeyAdvancedTypeSMARTHOME captures enum value "SMART_HOME"
	APIKeyAdvancedTypeSMARTHOME string = "SMART_HOME"

	// APIKeyAdvancedTypeOTHER captures enum value "OTHER"
	APIKeyAdvancedTypeOTHER string = "OTHER"
)

// prop value enum
func (m *APIKeyAdvanced) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiKeyAdvancedTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APIKeyAdvanced) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *APIKeyAdvanced) validateUpdateDate(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdateDate) { // not required
		return nil
	}

	if err := validate.FormatOf("updateDate", "body", "date-time", m.UpdateDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var apiKeyAdvancedWebhookFeaturesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEVICE_STATUS","DEVICE_MASTERDATA","DEVICE_CONFIG","DEVICE_LOGS","DEVICE_AUTHS","ACCOUNT_USER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiKeyAdvancedWebhookFeaturesItemsEnum = append(apiKeyAdvancedWebhookFeaturesItemsEnum, v)
	}
}

func (m *APIKeyAdvanced) validateWebhookFeaturesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiKeyAdvancedWebhookFeaturesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APIKeyAdvanced) validateWebhookFeatures(formats strfmt.Registry) error {
	if swag.IsZero(m.WebhookFeatures) { // not required
		return nil
	}

	if err := validate.UniqueItems("webhookFeatures", "body", m.WebhookFeatures); err != nil {
		return err
	}

	for i := 0; i < len(m.WebhookFeatures); i++ {

		// value enum
		if err := m.validateWebhookFeaturesItemsEnum("webhookFeatures"+"."+strconv.Itoa(i), "body", m.WebhookFeatures[i]); err != nil {
			return err
		}

	}

	return nil
}

var apiKeyAdvancedTypeWebhookStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ACTIVE","DEACTIVATED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiKeyAdvancedTypeWebhookStatusPropEnum = append(apiKeyAdvancedTypeWebhookStatusPropEnum, v)
	}
}

const (

	// APIKeyAdvancedWebhookStatusACTIVE captures enum value "ACTIVE"
	APIKeyAdvancedWebhookStatusACTIVE string = "ACTIVE"

	// APIKeyAdvancedWebhookStatusDEACTIVATED captures enum value "DEACTIVATED"
	APIKeyAdvancedWebhookStatusDEACTIVATED string = "DEACTIVATED"
)

// prop value enum
func (m *APIKeyAdvanced) validateWebhookStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiKeyAdvancedTypeWebhookStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APIKeyAdvanced) validateWebhookStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.WebhookStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateWebhookStatusEnum("webhookStatus", "body", m.WebhookStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this Api key advanced based on context it is used
func (m *APIKeyAdvanced) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIKeyAdvanced) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIKeyAdvanced) UnmarshalBinary(b []byte) error {
	var res APIKeyAdvanced
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
