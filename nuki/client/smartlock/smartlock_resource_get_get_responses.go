// Code generated by go-swagger; DO NOT EDIT.

package smartlock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// SmartlockResourceGetGetReader is a Reader for the SmartlockResourceGetGet structure.
type SmartlockResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SmartlockResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSmartlockResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSmartlockResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSmartlockResourceGetGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSmartlockResourceGetGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /smartlock/{smartlockId}] SmartlockResource_get_get", response, response.Code())
	}
}

// NewSmartlockResourceGetGetOK creates a SmartlockResourceGetGetOK with default headers values
func NewSmartlockResourceGetGetOK() *SmartlockResourceGetGetOK {
	return &SmartlockResourceGetGetOK{}
}

/*
SmartlockResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type SmartlockResourceGetGetOK struct {
	Payload *models.Smartlock
}

// IsSuccess returns true when this smartlock resource get get o k response has a 2xx status code
func (o *SmartlockResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this smartlock resource get get o k response has a 3xx status code
func (o *SmartlockResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource get get o k response has a 4xx status code
func (o *SmartlockResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this smartlock resource get get o k response has a 5xx status code
func (o *SmartlockResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource get get o k response a status code equal to that given
func (o *SmartlockResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the smartlock resource get get o k response
func (o *SmartlockResourceGetGetOK) Code() int {
	return 200
}

func (o *SmartlockResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SmartlockResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SmartlockResourceGetGetOK) GetPayload() *models.Smartlock {
	return o.Payload
}

func (o *SmartlockResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Smartlock)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSmartlockResourceGetGetUnauthorized creates a SmartlockResourceGetGetUnauthorized with default headers values
func NewSmartlockResourceGetGetUnauthorized() *SmartlockResourceGetGetUnauthorized {
	return &SmartlockResourceGetGetUnauthorized{}
}

/*
SmartlockResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type SmartlockResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this smartlock resource get get unauthorized response has a 2xx status code
func (o *SmartlockResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock resource get get unauthorized response has a 3xx status code
func (o *SmartlockResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource get get unauthorized response has a 4xx status code
func (o *SmartlockResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock resource get get unauthorized response has a 5xx status code
func (o *SmartlockResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource get get unauthorized response a status code equal to that given
func (o *SmartlockResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the smartlock resource get get unauthorized response
func (o *SmartlockResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *SmartlockResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetUnauthorized ", 401)
}

func (o *SmartlockResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetUnauthorized ", 401)
}

func (o *SmartlockResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockResourceGetGetForbidden creates a SmartlockResourceGetGetForbidden with default headers values
func NewSmartlockResourceGetGetForbidden() *SmartlockResourceGetGetForbidden {
	return &SmartlockResourceGetGetForbidden{}
}

/*
SmartlockResourceGetGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SmartlockResourceGetGetForbidden struct {
}

// IsSuccess returns true when this smartlock resource get get forbidden response has a 2xx status code
func (o *SmartlockResourceGetGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock resource get get forbidden response has a 3xx status code
func (o *SmartlockResourceGetGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource get get forbidden response has a 4xx status code
func (o *SmartlockResourceGetGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock resource get get forbidden response has a 5xx status code
func (o *SmartlockResourceGetGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource get get forbidden response a status code equal to that given
func (o *SmartlockResourceGetGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the smartlock resource get get forbidden response
func (o *SmartlockResourceGetGetForbidden) Code() int {
	return 403
}

func (o *SmartlockResourceGetGetForbidden) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetForbidden ", 403)
}

func (o *SmartlockResourceGetGetForbidden) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetForbidden ", 403)
}

func (o *SmartlockResourceGetGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockResourceGetGetNotFound creates a SmartlockResourceGetGetNotFound with default headers values
func NewSmartlockResourceGetGetNotFound() *SmartlockResourceGetGetNotFound {
	return &SmartlockResourceGetGetNotFound{}
}

/*
SmartlockResourceGetGetNotFound describes a response with status code 404, with default header values.

Not found
*/
type SmartlockResourceGetGetNotFound struct {
}

// IsSuccess returns true when this smartlock resource get get not found response has a 2xx status code
func (o *SmartlockResourceGetGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock resource get get not found response has a 3xx status code
func (o *SmartlockResourceGetGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock resource get get not found response has a 4xx status code
func (o *SmartlockResourceGetGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock resource get get not found response has a 5xx status code
func (o *SmartlockResourceGetGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock resource get get not found response a status code equal to that given
func (o *SmartlockResourceGetGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the smartlock resource get get not found response
func (o *SmartlockResourceGetGetNotFound) Code() int {
	return 404
}

func (o *SmartlockResourceGetGetNotFound) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetNotFound ", 404)
}

func (o *SmartlockResourceGetGetNotFound) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}][%d] smartlockResourceGetGetNotFound ", 404)
}

func (o *SmartlockResourceGetGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
