// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountDescent account descent
//
// swagger:model Account.Descent
type AccountDescent struct {

	// The account origin source
	// Required: true
	// Read Only: true
	// Enum: [GOOGLE APPLE]
	Origin string `json:"origin"`
}

// Validate validates this account descent
func (m *AccountDescent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrigin(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var accountDescentTypeOriginPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GOOGLE","APPLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountDescentTypeOriginPropEnum = append(accountDescentTypeOriginPropEnum, v)
	}
}

const (

	// AccountDescentOriginGOOGLE captures enum value "GOOGLE"
	AccountDescentOriginGOOGLE string = "GOOGLE"

	// AccountDescentOriginAPPLE captures enum value "APPLE"
	AccountDescentOriginAPPLE string = "APPLE"
)

// prop value enum
func (m *AccountDescent) validateOriginEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, accountDescentTypeOriginPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AccountDescent) validateOrigin(formats strfmt.Registry) error {

	if err := validate.RequiredString("origin", "body", m.Origin); err != nil {
		return err
	}

	// value enum
	if err := m.validateOriginEnum("origin", "body", m.Origin); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this account descent based on the context it is used
func (m *AccountDescent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOrigin(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountDescent) contextValidateOrigin(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "origin", "body", string(m.Origin)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountDescent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountDescent) UnmarshalBinary(b []byte) error {
	var res AccountDescent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
