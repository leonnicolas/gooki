// Code generated by go-swagger; DO NOT EDIT.

package smartlock_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSmartlockAuthsResourceGetGetParams creates a new SmartlockAuthsResourceGetGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSmartlockAuthsResourceGetGetParams() *SmartlockAuthsResourceGetGetParams {
	return &SmartlockAuthsResourceGetGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSmartlockAuthsResourceGetGetParamsWithTimeout creates a new SmartlockAuthsResourceGetGetParams object
// with the ability to set a timeout on a request.
func NewSmartlockAuthsResourceGetGetParamsWithTimeout(timeout time.Duration) *SmartlockAuthsResourceGetGetParams {
	return &SmartlockAuthsResourceGetGetParams{
		timeout: timeout,
	}
}

// NewSmartlockAuthsResourceGetGetParamsWithContext creates a new SmartlockAuthsResourceGetGetParams object
// with the ability to set a context for a request.
func NewSmartlockAuthsResourceGetGetParamsWithContext(ctx context.Context) *SmartlockAuthsResourceGetGetParams {
	return &SmartlockAuthsResourceGetGetParams{
		Context: ctx,
	}
}

// NewSmartlockAuthsResourceGetGetParamsWithHTTPClient creates a new SmartlockAuthsResourceGetGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewSmartlockAuthsResourceGetGetParamsWithHTTPClient(client *http.Client) *SmartlockAuthsResourceGetGetParams {
	return &SmartlockAuthsResourceGetGetParams{
		HTTPClient: client,
	}
}

/*
SmartlockAuthsResourceGetGetParams contains all the parameters to send to the API endpoint

	for the smartlock auths resource get get operation.

	Typically these are written to a http.Request.
*/
type SmartlockAuthsResourceGetGetParams struct {

	/* SmartlockID.

	   The smartlock id
	*/
	SmartlockID int64

	/* Types.

	   Filter for smartlock authorization's types (comma-separated eg: 0,2,3)
	*/
	Types *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the smartlock auths resource get get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SmartlockAuthsResourceGetGetParams) WithDefaults() *SmartlockAuthsResourceGetGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the smartlock auths resource get get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SmartlockAuthsResourceGetGetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) WithTimeout(timeout time.Duration) *SmartlockAuthsResourceGetGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) WithContext(ctx context.Context) *SmartlockAuthsResourceGetGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) WithHTTPClient(client *http.Client) *SmartlockAuthsResourceGetGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSmartlockID adds the smartlockID to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) WithSmartlockID(smartlockID int64) *SmartlockAuthsResourceGetGetParams {
	o.SetSmartlockID(smartlockID)
	return o
}

// SetSmartlockID adds the smartlockId to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) SetSmartlockID(smartlockID int64) {
	o.SmartlockID = smartlockID
}

// WithTypes adds the types to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) WithTypes(types *string) *SmartlockAuthsResourceGetGetParams {
	o.SetTypes(types)
	return o
}

// SetTypes adds the types to the smartlock auths resource get get params
func (o *SmartlockAuthsResourceGetGetParams) SetTypes(types *string) {
	o.Types = types
}

// WriteToRequest writes these params to a swagger request
func (o *SmartlockAuthsResourceGetGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param smartlockId
	if err := r.SetPathParam("smartlockId", swag.FormatInt64(o.SmartlockID)); err != nil {
		return err
	}

	if o.Types != nil {

		// query param types
		var qrTypes string

		if o.Types != nil {
			qrTypes = *o.Types
		}
		qTypes := qrTypes
		if qTypes != "" {

			if err := r.SetQueryParam("types", qTypes); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
