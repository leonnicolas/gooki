// Code generated by go-swagger; DO NOT EDIT.

package api_key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// APIKeyAdvancedResourceGetGetReader is a Reader for the APIKeyAdvancedResourceGetGet structure.
type APIKeyAdvancedResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIKeyAdvancedResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAPIKeyAdvancedResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAPIKeyAdvancedResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAPIKeyAdvancedResourceGetGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAPIKeyAdvancedResourceGetGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/key/{apiKeyId}/advanced] ApiKeyAdvancedResource_get_get", response, response.Code())
	}
}

// NewAPIKeyAdvancedResourceGetGetOK creates a APIKeyAdvancedResourceGetGetOK with default headers values
func NewAPIKeyAdvancedResourceGetGetOK() *APIKeyAdvancedResourceGetGetOK {
	return &APIKeyAdvancedResourceGetGetOK{}
}

/*
APIKeyAdvancedResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type APIKeyAdvancedResourceGetGetOK struct {
	Payload *models.AdvancedAPIKey
}

// IsSuccess returns true when this api key advanced resource get get o k response has a 2xx status code
func (o *APIKeyAdvancedResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this api key advanced resource get get o k response has a 3xx status code
func (o *APIKeyAdvancedResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api key advanced resource get get o k response has a 4xx status code
func (o *APIKeyAdvancedResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this api key advanced resource get get o k response has a 5xx status code
func (o *APIKeyAdvancedResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this api key advanced resource get get o k response a status code equal to that given
func (o *APIKeyAdvancedResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the api key advanced resource get get o k response
func (o *APIKeyAdvancedResourceGetGetOK) Code() int {
	return 200
}

func (o *APIKeyAdvancedResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *APIKeyAdvancedResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *APIKeyAdvancedResourceGetGetOK) GetPayload() *models.AdvancedAPIKey {
	return o.Payload
}

func (o *APIKeyAdvancedResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AdvancedAPIKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIKeyAdvancedResourceGetGetUnauthorized creates a APIKeyAdvancedResourceGetGetUnauthorized with default headers values
func NewAPIKeyAdvancedResourceGetGetUnauthorized() *APIKeyAdvancedResourceGetGetUnauthorized {
	return &APIKeyAdvancedResourceGetGetUnauthorized{}
}

/*
APIKeyAdvancedResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type APIKeyAdvancedResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this api key advanced resource get get unauthorized response has a 2xx status code
func (o *APIKeyAdvancedResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api key advanced resource get get unauthorized response has a 3xx status code
func (o *APIKeyAdvancedResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api key advanced resource get get unauthorized response has a 4xx status code
func (o *APIKeyAdvancedResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this api key advanced resource get get unauthorized response has a 5xx status code
func (o *APIKeyAdvancedResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this api key advanced resource get get unauthorized response a status code equal to that given
func (o *APIKeyAdvancedResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the api key advanced resource get get unauthorized response
func (o *APIKeyAdvancedResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *APIKeyAdvancedResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetUnauthorized ", 401)
}

func (o *APIKeyAdvancedResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetUnauthorized ", 401)
}

func (o *APIKeyAdvancedResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAPIKeyAdvancedResourceGetGetForbidden creates a APIKeyAdvancedResourceGetGetForbidden with default headers values
func NewAPIKeyAdvancedResourceGetGetForbidden() *APIKeyAdvancedResourceGetGetForbidden {
	return &APIKeyAdvancedResourceGetGetForbidden{}
}

/*
APIKeyAdvancedResourceGetGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type APIKeyAdvancedResourceGetGetForbidden struct {
}

// IsSuccess returns true when this api key advanced resource get get forbidden response has a 2xx status code
func (o *APIKeyAdvancedResourceGetGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api key advanced resource get get forbidden response has a 3xx status code
func (o *APIKeyAdvancedResourceGetGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api key advanced resource get get forbidden response has a 4xx status code
func (o *APIKeyAdvancedResourceGetGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this api key advanced resource get get forbidden response has a 5xx status code
func (o *APIKeyAdvancedResourceGetGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this api key advanced resource get get forbidden response a status code equal to that given
func (o *APIKeyAdvancedResourceGetGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the api key advanced resource get get forbidden response
func (o *APIKeyAdvancedResourceGetGetForbidden) Code() int {
	return 403
}

func (o *APIKeyAdvancedResourceGetGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetForbidden ", 403)
}

func (o *APIKeyAdvancedResourceGetGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetForbidden ", 403)
}

func (o *APIKeyAdvancedResourceGetGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAPIKeyAdvancedResourceGetGetNotFound creates a APIKeyAdvancedResourceGetGetNotFound with default headers values
func NewAPIKeyAdvancedResourceGetGetNotFound() *APIKeyAdvancedResourceGetGetNotFound {
	return &APIKeyAdvancedResourceGetGetNotFound{}
}

/*
APIKeyAdvancedResourceGetGetNotFound describes a response with status code 404, with default header values.

Not found
*/
type APIKeyAdvancedResourceGetGetNotFound struct {
}

// IsSuccess returns true when this api key advanced resource get get not found response has a 2xx status code
func (o *APIKeyAdvancedResourceGetGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api key advanced resource get get not found response has a 3xx status code
func (o *APIKeyAdvancedResourceGetGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api key advanced resource get get not found response has a 4xx status code
func (o *APIKeyAdvancedResourceGetGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this api key advanced resource get get not found response has a 5xx status code
func (o *APIKeyAdvancedResourceGetGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this api key advanced resource get get not found response a status code equal to that given
func (o *APIKeyAdvancedResourceGetGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the api key advanced resource get get not found response
func (o *APIKeyAdvancedResourceGetGetNotFound) Code() int {
	return 404
}

func (o *APIKeyAdvancedResourceGetGetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetNotFound ", 404)
}

func (o *APIKeyAdvancedResourceGetGetNotFound) String() string {
	return fmt.Sprintf("[GET /api/key/{apiKeyId}/advanced][%d] apiKeyAdvancedResourceGetGetNotFound ", 404)
}

func (o *APIKeyAdvancedResourceGetGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
