// Code generated by go-swagger; DO NOT EDIT.

package smartlock_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// SmartlockAuthResourceGetGetReader is a Reader for the SmartlockAuthResourceGetGet structure.
type SmartlockAuthResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SmartlockAuthResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSmartlockAuthResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSmartlockAuthResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSmartlockAuthResourceGetGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /smartlock/{smartlockId}/auth/{id}] SmartlockAuthResource_get_get", response, response.Code())
	}
}

// NewSmartlockAuthResourceGetGetOK creates a SmartlockAuthResourceGetGetOK with default headers values
func NewSmartlockAuthResourceGetGetOK() *SmartlockAuthResourceGetGetOK {
	return &SmartlockAuthResourceGetGetOK{}
}

/*
SmartlockAuthResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type SmartlockAuthResourceGetGetOK struct {
	Payload *models.SmartlockAuth
}

// IsSuccess returns true when this smartlock auth resource get get o k response has a 2xx status code
func (o *SmartlockAuthResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this smartlock auth resource get get o k response has a 3xx status code
func (o *SmartlockAuthResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock auth resource get get o k response has a 4xx status code
func (o *SmartlockAuthResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this smartlock auth resource get get o k response has a 5xx status code
func (o *SmartlockAuthResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock auth resource get get o k response a status code equal to that given
func (o *SmartlockAuthResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the smartlock auth resource get get o k response
func (o *SmartlockAuthResourceGetGetOK) Code() int {
	return 200
}

func (o *SmartlockAuthResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth/{id}][%d] smartlockAuthResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SmartlockAuthResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth/{id}][%d] smartlockAuthResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SmartlockAuthResourceGetGetOK) GetPayload() *models.SmartlockAuth {
	return o.Payload
}

func (o *SmartlockAuthResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmartlockAuth)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSmartlockAuthResourceGetGetUnauthorized creates a SmartlockAuthResourceGetGetUnauthorized with default headers values
func NewSmartlockAuthResourceGetGetUnauthorized() *SmartlockAuthResourceGetGetUnauthorized {
	return &SmartlockAuthResourceGetGetUnauthorized{}
}

/*
SmartlockAuthResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type SmartlockAuthResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this smartlock auth resource get get unauthorized response has a 2xx status code
func (o *SmartlockAuthResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock auth resource get get unauthorized response has a 3xx status code
func (o *SmartlockAuthResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock auth resource get get unauthorized response has a 4xx status code
func (o *SmartlockAuthResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock auth resource get get unauthorized response has a 5xx status code
func (o *SmartlockAuthResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock auth resource get get unauthorized response a status code equal to that given
func (o *SmartlockAuthResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the smartlock auth resource get get unauthorized response
func (o *SmartlockAuthResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *SmartlockAuthResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth/{id}][%d] smartlockAuthResourceGetGetUnauthorized ", 401)
}

func (o *SmartlockAuthResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth/{id}][%d] smartlockAuthResourceGetGetUnauthorized ", 401)
}

func (o *SmartlockAuthResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockAuthResourceGetGetForbidden creates a SmartlockAuthResourceGetGetForbidden with default headers values
func NewSmartlockAuthResourceGetGetForbidden() *SmartlockAuthResourceGetGetForbidden {
	return &SmartlockAuthResourceGetGetForbidden{}
}

/*
SmartlockAuthResourceGetGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SmartlockAuthResourceGetGetForbidden struct {
}

// IsSuccess returns true when this smartlock auth resource get get forbidden response has a 2xx status code
func (o *SmartlockAuthResourceGetGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock auth resource get get forbidden response has a 3xx status code
func (o *SmartlockAuthResourceGetGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock auth resource get get forbidden response has a 4xx status code
func (o *SmartlockAuthResourceGetGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock auth resource get get forbidden response has a 5xx status code
func (o *SmartlockAuthResourceGetGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock auth resource get get forbidden response a status code equal to that given
func (o *SmartlockAuthResourceGetGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the smartlock auth resource get get forbidden response
func (o *SmartlockAuthResourceGetGetForbidden) Code() int {
	return 403
}

func (o *SmartlockAuthResourceGetGetForbidden) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth/{id}][%d] smartlockAuthResourceGetGetForbidden ", 403)
}

func (o *SmartlockAuthResourceGetGetForbidden) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth/{id}][%d] smartlockAuthResourceGetGetForbidden ", 403)
}

func (o *SmartlockAuthResourceGetGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
