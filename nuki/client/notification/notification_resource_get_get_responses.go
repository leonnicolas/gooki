// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// NotificationResourceGetGetReader is a Reader for the NotificationResourceGetGet structure.
type NotificationResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotificationResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewNotificationResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationResourceGetGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationResourceGetGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /notification/{notificationId}] NotificationResource_get_get", response, response.Code())
	}
}

// NewNotificationResourceGetGetOK creates a NotificationResourceGetGetOK with default headers values
func NewNotificationResourceGetGetOK() *NotificationResourceGetGetOK {
	return &NotificationResourceGetGetOK{}
}

/*
NotificationResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type NotificationResourceGetGetOK struct {
	Payload *models.Notification
}

// IsSuccess returns true when this notification resource get get o k response has a 2xx status code
func (o *NotificationResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notification resource get get o k response has a 3xx status code
func (o *NotificationResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource get get o k response has a 4xx status code
func (o *NotificationResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notification resource get get o k response has a 5xx status code
func (o *NotificationResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource get get o k response a status code equal to that given
func (o *NotificationResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the notification resource get get o k response
func (o *NotificationResourceGetGetOK) Code() int {
	return 200
}

func (o *NotificationResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *NotificationResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *NotificationResourceGetGetOK) GetPayload() *models.Notification {
	return o.Payload
}

func (o *NotificationResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationResourceGetGetUnauthorized creates a NotificationResourceGetGetUnauthorized with default headers values
func NewNotificationResourceGetGetUnauthorized() *NotificationResourceGetGetUnauthorized {
	return &NotificationResourceGetGetUnauthorized{}
}

/*
NotificationResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type NotificationResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this notification resource get get unauthorized response has a 2xx status code
func (o *NotificationResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notification resource get get unauthorized response has a 3xx status code
func (o *NotificationResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource get get unauthorized response has a 4xx status code
func (o *NotificationResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this notification resource get get unauthorized response has a 5xx status code
func (o *NotificationResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource get get unauthorized response a status code equal to that given
func (o *NotificationResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the notification resource get get unauthorized response
func (o *NotificationResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *NotificationResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetUnauthorized ", 401)
}

func (o *NotificationResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetUnauthorized ", 401)
}

func (o *NotificationResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationResourceGetGetForbidden creates a NotificationResourceGetGetForbidden with default headers values
func NewNotificationResourceGetGetForbidden() *NotificationResourceGetGetForbidden {
	return &NotificationResourceGetGetForbidden{}
}

/*
NotificationResourceGetGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NotificationResourceGetGetForbidden struct {
}

// IsSuccess returns true when this notification resource get get forbidden response has a 2xx status code
func (o *NotificationResourceGetGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notification resource get get forbidden response has a 3xx status code
func (o *NotificationResourceGetGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource get get forbidden response has a 4xx status code
func (o *NotificationResourceGetGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this notification resource get get forbidden response has a 5xx status code
func (o *NotificationResourceGetGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource get get forbidden response a status code equal to that given
func (o *NotificationResourceGetGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the notification resource get get forbidden response
func (o *NotificationResourceGetGetForbidden) Code() int {
	return 403
}

func (o *NotificationResourceGetGetForbidden) Error() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetForbidden ", 403)
}

func (o *NotificationResourceGetGetForbidden) String() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetForbidden ", 403)
}

func (o *NotificationResourceGetGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationResourceGetGetNotFound creates a NotificationResourceGetGetNotFound with default headers values
func NewNotificationResourceGetGetNotFound() *NotificationResourceGetGetNotFound {
	return &NotificationResourceGetGetNotFound{}
}

/*
NotificationResourceGetGetNotFound describes a response with status code 404, with default header values.

Not found
*/
type NotificationResourceGetGetNotFound struct {
}

// IsSuccess returns true when this notification resource get get not found response has a 2xx status code
func (o *NotificationResourceGetGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notification resource get get not found response has a 3xx status code
func (o *NotificationResourceGetGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource get get not found response has a 4xx status code
func (o *NotificationResourceGetGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this notification resource get get not found response has a 5xx status code
func (o *NotificationResourceGetGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource get get not found response a status code equal to that given
func (o *NotificationResourceGetGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the notification resource get get not found response
func (o *NotificationResourceGetGetNotFound) Code() int {
	return 404
}

func (o *NotificationResourceGetGetNotFound) Error() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetNotFound ", 404)
}

func (o *NotificationResourceGetGetNotFound) String() string {
	return fmt.Sprintf("[GET /notification/{notificationId}][%d] notificationResourceGetGetNotFound ", 404)
}

func (o *NotificationResourceGetGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
