// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// NotificationsResourcePutPutReader is a Reader for the NotificationsResourcePutPut structure.
type NotificationsResourcePutPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationsResourcePutPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotificationsResourcePutPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationsResourcePutPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationsResourcePutPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationsResourcePutPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /notification] NotificationsResource_put_put", response, response.Code())
	}
}

// NewNotificationsResourcePutPutOK creates a NotificationsResourcePutPutOK with default headers values
func NewNotificationsResourcePutPutOK() *NotificationsResourcePutPutOK {
	return &NotificationsResourcePutPutOK{}
}

/*
NotificationsResourcePutPutOK describes a response with status code 200, with default header values.

successful operation
*/
type NotificationsResourcePutPutOK struct {
	Payload *models.Notification
}

// IsSuccess returns true when this notifications resource put put o k response has a 2xx status code
func (o *NotificationsResourcePutPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notifications resource put put o k response has a 3xx status code
func (o *NotificationsResourcePutPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications resource put put o k response has a 4xx status code
func (o *NotificationsResourcePutPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notifications resource put put o k response has a 5xx status code
func (o *NotificationsResourcePutPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications resource put put o k response a status code equal to that given
func (o *NotificationsResourcePutPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the notifications resource put put o k response
func (o *NotificationsResourcePutPutOK) Code() int {
	return 200
}

func (o *NotificationsResourcePutPutOK) Error() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutOK  %+v", 200, o.Payload)
}

func (o *NotificationsResourcePutPutOK) String() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutOK  %+v", 200, o.Payload)
}

func (o *NotificationsResourcePutPutOK) GetPayload() *models.Notification {
	return o.Payload
}

func (o *NotificationsResourcePutPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsResourcePutPutBadRequest creates a NotificationsResourcePutPutBadRequest with default headers values
func NewNotificationsResourcePutPutBadRequest() *NotificationsResourcePutPutBadRequest {
	return &NotificationsResourcePutPutBadRequest{}
}

/*
NotificationsResourcePutPutBadRequest describes a response with status code 400, with default header values.

Bad Parameter
*/
type NotificationsResourcePutPutBadRequest struct {
}

// IsSuccess returns true when this notifications resource put put bad request response has a 2xx status code
func (o *NotificationsResourcePutPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications resource put put bad request response has a 3xx status code
func (o *NotificationsResourcePutPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications resource put put bad request response has a 4xx status code
func (o *NotificationsResourcePutPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications resource put put bad request response has a 5xx status code
func (o *NotificationsResourcePutPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications resource put put bad request response a status code equal to that given
func (o *NotificationsResourcePutPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the notifications resource put put bad request response
func (o *NotificationsResourcePutPutBadRequest) Code() int {
	return 400
}

func (o *NotificationsResourcePutPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutBadRequest ", 400)
}

func (o *NotificationsResourcePutPutBadRequest) String() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutBadRequest ", 400)
}

func (o *NotificationsResourcePutPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationsResourcePutPutUnauthorized creates a NotificationsResourcePutPutUnauthorized with default headers values
func NewNotificationsResourcePutPutUnauthorized() *NotificationsResourcePutPutUnauthorized {
	return &NotificationsResourcePutPutUnauthorized{}
}

/*
NotificationsResourcePutPutUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type NotificationsResourcePutPutUnauthorized struct {
}

// IsSuccess returns true when this notifications resource put put unauthorized response has a 2xx status code
func (o *NotificationsResourcePutPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications resource put put unauthorized response has a 3xx status code
func (o *NotificationsResourcePutPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications resource put put unauthorized response has a 4xx status code
func (o *NotificationsResourcePutPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications resource put put unauthorized response has a 5xx status code
func (o *NotificationsResourcePutPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications resource put put unauthorized response a status code equal to that given
func (o *NotificationsResourcePutPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the notifications resource put put unauthorized response
func (o *NotificationsResourcePutPutUnauthorized) Code() int {
	return 401
}

func (o *NotificationsResourcePutPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutUnauthorized ", 401)
}

func (o *NotificationsResourcePutPutUnauthorized) String() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutUnauthorized ", 401)
}

func (o *NotificationsResourcePutPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationsResourcePutPutForbidden creates a NotificationsResourcePutPutForbidden with default headers values
func NewNotificationsResourcePutPutForbidden() *NotificationsResourcePutPutForbidden {
	return &NotificationsResourcePutPutForbidden{}
}

/*
NotificationsResourcePutPutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NotificationsResourcePutPutForbidden struct {
}

// IsSuccess returns true when this notifications resource put put forbidden response has a 2xx status code
func (o *NotificationsResourcePutPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications resource put put forbidden response has a 3xx status code
func (o *NotificationsResourcePutPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications resource put put forbidden response has a 4xx status code
func (o *NotificationsResourcePutPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications resource put put forbidden response has a 5xx status code
func (o *NotificationsResourcePutPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications resource put put forbidden response a status code equal to that given
func (o *NotificationsResourcePutPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the notifications resource put put forbidden response
func (o *NotificationsResourcePutPutForbidden) Code() int {
	return 403
}

func (o *NotificationsResourcePutPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutForbidden ", 403)
}

func (o *NotificationsResourcePutPutForbidden) String() string {
	return fmt.Sprintf("[PUT /notification][%d] notificationsResourcePutPutForbidden ", 403)
}

func (o *NotificationsResourcePutPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
