// Code generated by go-swagger; DO NOT EDIT.

package smartlock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new smartlock API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for smartlock API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	SmartdoorAdvancedConfigResourcePostPost(params *SmartdoorAdvancedConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartdoorAdvancedConfigResourcePostPostNoContent, error)

	SmartlockActionResourcePostPost(params *SmartlockActionResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockActionResourcePostPostNoContent, error)

	SmartlockAdminPinResourcePostPost(params *SmartlockAdminPinResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockAdminPinResourcePostPostNoContent, error)

	SmartlockAdvancedConfigResourcePostPost(params *SmartlockAdvancedConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockAdvancedConfigResourcePostPostNoContent, error)

	SmartlockBulkWebConfigResourcePostPost(params *SmartlockBulkWebConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockBulkWebConfigResourcePostPostNoContent, error)

	SmartlockConfigResourcePostPost(params *SmartlockConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockConfigResourcePostPostNoContent, error)

	SmartlockLockActionResourcePostLockPost(params *SmartlockLockActionResourcePostLockPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockLockActionResourcePostLockPostNoContent, error)

	SmartlockOpenerAdvancedConfigResourcePostPost(params *SmartlockOpenerAdvancedConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockOpenerAdvancedConfigResourcePostPostNoContent, error)

	SmartlockResourceDeleteDelete(params *SmartlockResourceDeleteDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockResourceDeleteDeleteNoContent, error)

	SmartlockResourceGetGet(params *SmartlockResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockResourceGetGetOK, error)

	SmartlockResourcePostPost(params *SmartlockResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockResourcePostPostNoContent, error)

	SmartlockSyncResourcePostPost(params *SmartlockSyncResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockSyncResourcePostPostNoContent, error)

	SmartlockUnlockActionResourcePostUnlockPost(params *SmartlockUnlockActionResourcePostUnlockPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockUnlockActionResourcePostUnlockPostNoContent, error)

	SmartlockWebConfigResourcePostPost(params *SmartlockWebConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockWebConfigResourcePostPostNoContent, error)

	SmartlocksResourceGetGet(params *SmartlocksResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlocksResourceGetGetOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
SmartdoorAdvancedConfigResourcePostPost updates a smartdoor advanced config
*/
func (a *Client) SmartdoorAdvancedConfigResourcePostPost(params *SmartdoorAdvancedConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartdoorAdvancedConfigResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartdoorAdvancedConfigResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartdoorAdvancedConfigResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/advanced/smartdoorconfig",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartdoorAdvancedConfigResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartdoorAdvancedConfigResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartdoorAdvancedConfigResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockActionResourcePostPost locks and unlock a smartlock with options
*/
func (a *Client) SmartlockActionResourcePostPost(params *SmartlockActionResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockActionResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockActionResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockActionResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/action",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockActionResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockActionResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockActionResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockAdminPinResourcePostPost updates a smartlock admin pin
*/
func (a *Client) SmartlockAdminPinResourcePostPost(params *SmartlockAdminPinResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockAdminPinResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockAdminPinResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockAdminPinResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/admin/pin",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockAdminPinResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockAdminPinResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockAdminPinResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockAdvancedConfigResourcePostPost updates a smartlock advanced config
*/
func (a *Client) SmartlockAdvancedConfigResourcePostPost(params *SmartlockAdvancedConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockAdvancedConfigResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockAdvancedConfigResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockAdvancedConfigResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/advanced/config",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockAdvancedConfigResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockAdvancedConfigResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockAdvancedConfigResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockBulkWebConfigResourcePostPost updates the web config for a group of smartlocks
*/
func (a *Client) SmartlockBulkWebConfigResourcePostPost(params *SmartlockBulkWebConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockBulkWebConfigResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockBulkWebConfigResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockBulkWebConfigResource_post_post",
		Method:             "POST",
		PathPattern:        "/bulk-web-config",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockBulkWebConfigResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockBulkWebConfigResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockBulkWebConfigResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockConfigResourcePostPost updates a smartlock config
*/
func (a *Client) SmartlockConfigResourcePostPost(params *SmartlockConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockConfigResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockConfigResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockConfigResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/config",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockConfigResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockConfigResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockConfigResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockLockActionResourcePostLockPost locks a smartlock
*/
func (a *Client) SmartlockLockActionResourcePostLockPost(params *SmartlockLockActionResourcePostLockPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockLockActionResourcePostLockPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockLockActionResourcePostLockPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockLockActionResource_postLock_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/action/lock",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockLockActionResourcePostLockPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockLockActionResourcePostLockPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockLockActionResource_postLock_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockOpenerAdvancedConfigResourcePostPost updates an opener advanced config
*/
func (a *Client) SmartlockOpenerAdvancedConfigResourcePostPost(params *SmartlockOpenerAdvancedConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockOpenerAdvancedConfigResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockOpenerAdvancedConfigResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockOpenerAdvancedConfigResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/advanced/openerconfig",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockOpenerAdvancedConfigResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockOpenerAdvancedConfigResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockOpenerAdvancedConfigResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockResourceDeleteDelete deletes a smartlock
*/
func (a *Client) SmartlockResourceDeleteDelete(params *SmartlockResourceDeleteDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockResourceDeleteDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockResourceDeleteDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockResource_delete_delete",
		Method:             "DELETE",
		PathPattern:        "/smartlock/{smartlockId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockResourceDeleteDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockResourceDeleteDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockResource_delete_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockResourceGetGet gets a smartlock
*/
func (a *Client) SmartlockResourceGetGet(params *SmartlockResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockResource_get_get",
		Method:             "GET",
		PathPattern:        "/smartlock/{smartlockId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockResourceGetGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockResourcePostPost updates a smartlock
*/
func (a *Client) SmartlockResourcePostPost(params *SmartlockResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockSyncResourcePostPost syncs a smartlock
*/
func (a *Client) SmartlockSyncResourcePostPost(params *SmartlockSyncResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockSyncResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockSyncResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockSyncResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/sync",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockSyncResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockSyncResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockSyncResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockUnlockActionResourcePostUnlockPost unlocks a smartlock
*/
func (a *Client) SmartlockUnlockActionResourcePostUnlockPost(params *SmartlockUnlockActionResourcePostUnlockPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockUnlockActionResourcePostUnlockPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockUnlockActionResourcePostUnlockPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockUnlockActionResource_postUnlock_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/action/unlock",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockUnlockActionResourcePostUnlockPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockUnlockActionResourcePostUnlockPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockUnlockActionResource_postUnlock_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlockWebConfigResourcePostPost updates a smartlock web config
*/
func (a *Client) SmartlockWebConfigResourcePostPost(params *SmartlockWebConfigResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlockWebConfigResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlockWebConfigResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlockWebConfigResource_post_post",
		Method:             "POST",
		PathPattern:        "/smartlock/{smartlockId}/web/config",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlockWebConfigResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlockWebConfigResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlockWebConfigResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SmartlocksResourceGetGet gets a list of smartlocks
*/
func (a *Client) SmartlocksResourceGetGet(params *SmartlocksResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SmartlocksResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSmartlocksResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SmartlocksResource_get_get",
		Method:             "GET",
		PathPattern:        "/smartlock",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SmartlocksResourceGetGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SmartlocksResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SmartlocksResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
