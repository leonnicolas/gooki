// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// SubscriptionResourceGetGetReader is a Reader for the SubscriptionResourceGetGet structure.
type SubscriptionResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubscriptionResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubscriptionResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSubscriptionResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subscription/{subscriptionId}] SubscriptionResource_get_get", response, response.Code())
	}
}

// NewSubscriptionResourceGetGetOK creates a SubscriptionResourceGetGetOK with default headers values
func NewSubscriptionResourceGetGetOK() *SubscriptionResourceGetGetOK {
	return &SubscriptionResourceGetGetOK{}
}

/*
SubscriptionResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type SubscriptionResourceGetGetOK struct {
	Payload *models.Subscription
}

// IsSuccess returns true when this subscription resource get get o k response has a 2xx status code
func (o *SubscriptionResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this subscription resource get get o k response has a 3xx status code
func (o *SubscriptionResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this subscription resource get get o k response has a 4xx status code
func (o *SubscriptionResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this subscription resource get get o k response has a 5xx status code
func (o *SubscriptionResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this subscription resource get get o k response a status code equal to that given
func (o *SubscriptionResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the subscription resource get get o k response
func (o *SubscriptionResourceGetGetOK) Code() int {
	return 200
}

func (o *SubscriptionResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /subscription/{subscriptionId}][%d] subscriptionResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SubscriptionResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /subscription/{subscriptionId}][%d] subscriptionResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SubscriptionResourceGetGetOK) GetPayload() *models.Subscription {
	return o.Payload
}

func (o *SubscriptionResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscriptionResourceGetGetUnauthorized creates a SubscriptionResourceGetGetUnauthorized with default headers values
func NewSubscriptionResourceGetGetUnauthorized() *SubscriptionResourceGetGetUnauthorized {
	return &SubscriptionResourceGetGetUnauthorized{}
}

/*
SubscriptionResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type SubscriptionResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this subscription resource get get unauthorized response has a 2xx status code
func (o *SubscriptionResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this subscription resource get get unauthorized response has a 3xx status code
func (o *SubscriptionResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this subscription resource get get unauthorized response has a 4xx status code
func (o *SubscriptionResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this subscription resource get get unauthorized response has a 5xx status code
func (o *SubscriptionResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this subscription resource get get unauthorized response a status code equal to that given
func (o *SubscriptionResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the subscription resource get get unauthorized response
func (o *SubscriptionResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *SubscriptionResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /subscription/{subscriptionId}][%d] subscriptionResourceGetGetUnauthorized ", 401)
}

func (o *SubscriptionResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /subscription/{subscriptionId}][%d] subscriptionResourceGetGetUnauthorized ", 401)
}

func (o *SubscriptionResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
