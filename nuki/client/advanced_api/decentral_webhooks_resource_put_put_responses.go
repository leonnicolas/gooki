// Code generated by go-swagger; DO NOT EDIT.

package advanced_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// DecentralWebhooksResourcePutPutReader is a Reader for the DecentralWebhooksResourcePutPut structure.
type DecentralWebhooksResourcePutPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DecentralWebhooksResourcePutPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDecentralWebhooksResourcePutPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDecentralWebhooksResourcePutPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDecentralWebhooksResourcePutPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDecentralWebhooksResourcePutPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/decentralWebhook] DecentralWebhooksResource_put_put", response, response.Code())
	}
}

// NewDecentralWebhooksResourcePutPutOK creates a DecentralWebhooksResourcePutPutOK with default headers values
func NewDecentralWebhooksResourcePutPutOK() *DecentralWebhooksResourcePutPutOK {
	return &DecentralWebhooksResourcePutPutOK{}
}

/*
DecentralWebhooksResourcePutPutOK describes a response with status code 200, with default header values.

successful operation
*/
type DecentralWebhooksResourcePutPutOK struct {
	Payload *models.DecentralWebhook
}

// IsSuccess returns true when this decentral webhooks resource put put o k response has a 2xx status code
func (o *DecentralWebhooksResourcePutPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this decentral webhooks resource put put o k response has a 3xx status code
func (o *DecentralWebhooksResourcePutPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource put put o k response has a 4xx status code
func (o *DecentralWebhooksResourcePutPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this decentral webhooks resource put put o k response has a 5xx status code
func (o *DecentralWebhooksResourcePutPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource put put o k response a status code equal to that given
func (o *DecentralWebhooksResourcePutPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the decentral webhooks resource put put o k response
func (o *DecentralWebhooksResourcePutPutOK) Code() int {
	return 200
}

func (o *DecentralWebhooksResourcePutPutOK) Error() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutOK  %+v", 200, o.Payload)
}

func (o *DecentralWebhooksResourcePutPutOK) String() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutOK  %+v", 200, o.Payload)
}

func (o *DecentralWebhooksResourcePutPutOK) GetPayload() *models.DecentralWebhook {
	return o.Payload
}

func (o *DecentralWebhooksResourcePutPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DecentralWebhook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecentralWebhooksResourcePutPutBadRequest creates a DecentralWebhooksResourcePutPutBadRequest with default headers values
func NewDecentralWebhooksResourcePutPutBadRequest() *DecentralWebhooksResourcePutPutBadRequest {
	return &DecentralWebhooksResourcePutPutBadRequest{}
}

/*
DecentralWebhooksResourcePutPutBadRequest describes a response with status code 400, with default header values.

Bad Parameter
*/
type DecentralWebhooksResourcePutPutBadRequest struct {
}

// IsSuccess returns true when this decentral webhooks resource put put bad request response has a 2xx status code
func (o *DecentralWebhooksResourcePutPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decentral webhooks resource put put bad request response has a 3xx status code
func (o *DecentralWebhooksResourcePutPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource put put bad request response has a 4xx status code
func (o *DecentralWebhooksResourcePutPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this decentral webhooks resource put put bad request response has a 5xx status code
func (o *DecentralWebhooksResourcePutPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource put put bad request response a status code equal to that given
func (o *DecentralWebhooksResourcePutPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the decentral webhooks resource put put bad request response
func (o *DecentralWebhooksResourcePutPutBadRequest) Code() int {
	return 400
}

func (o *DecentralWebhooksResourcePutPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutBadRequest ", 400)
}

func (o *DecentralWebhooksResourcePutPutBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutBadRequest ", 400)
}

func (o *DecentralWebhooksResourcePutPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDecentralWebhooksResourcePutPutUnauthorized creates a DecentralWebhooksResourcePutPutUnauthorized with default headers values
func NewDecentralWebhooksResourcePutPutUnauthorized() *DecentralWebhooksResourcePutPutUnauthorized {
	return &DecentralWebhooksResourcePutPutUnauthorized{}
}

/*
DecentralWebhooksResourcePutPutUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type DecentralWebhooksResourcePutPutUnauthorized struct {
}

// IsSuccess returns true when this decentral webhooks resource put put unauthorized response has a 2xx status code
func (o *DecentralWebhooksResourcePutPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decentral webhooks resource put put unauthorized response has a 3xx status code
func (o *DecentralWebhooksResourcePutPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource put put unauthorized response has a 4xx status code
func (o *DecentralWebhooksResourcePutPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this decentral webhooks resource put put unauthorized response has a 5xx status code
func (o *DecentralWebhooksResourcePutPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource put put unauthorized response a status code equal to that given
func (o *DecentralWebhooksResourcePutPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the decentral webhooks resource put put unauthorized response
func (o *DecentralWebhooksResourcePutPutUnauthorized) Code() int {
	return 401
}

func (o *DecentralWebhooksResourcePutPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutUnauthorized ", 401)
}

func (o *DecentralWebhooksResourcePutPutUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutUnauthorized ", 401)
}

func (o *DecentralWebhooksResourcePutPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDecentralWebhooksResourcePutPutForbidden creates a DecentralWebhooksResourcePutPutForbidden with default headers values
func NewDecentralWebhooksResourcePutPutForbidden() *DecentralWebhooksResourcePutPutForbidden {
	return &DecentralWebhooksResourcePutPutForbidden{}
}

/*
DecentralWebhooksResourcePutPutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DecentralWebhooksResourcePutPutForbidden struct {
}

// IsSuccess returns true when this decentral webhooks resource put put forbidden response has a 2xx status code
func (o *DecentralWebhooksResourcePutPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decentral webhooks resource put put forbidden response has a 3xx status code
func (o *DecentralWebhooksResourcePutPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decentral webhooks resource put put forbidden response has a 4xx status code
func (o *DecentralWebhooksResourcePutPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this decentral webhooks resource put put forbidden response has a 5xx status code
func (o *DecentralWebhooksResourcePutPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this decentral webhooks resource put put forbidden response a status code equal to that given
func (o *DecentralWebhooksResourcePutPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the decentral webhooks resource put put forbidden response
func (o *DecentralWebhooksResourcePutPutForbidden) Code() int {
	return 403
}

func (o *DecentralWebhooksResourcePutPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutForbidden ", 403)
}

func (o *DecentralWebhooksResourcePutPutForbidden) String() string {
	return fmt.Sprintf("[PUT /api/decentralWebhook][%d] decentralWebhooksResourcePutPutForbidden ", 403)
}

func (o *DecentralWebhooksResourcePutPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
