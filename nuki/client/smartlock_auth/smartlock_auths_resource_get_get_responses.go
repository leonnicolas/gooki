// Code generated by go-swagger; DO NOT EDIT.

package smartlock_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// SmartlockAuthsResourceGetGetReader is a Reader for the SmartlockAuthsResourceGetGet structure.
type SmartlockAuthsResourceGetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SmartlockAuthsResourceGetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSmartlockAuthsResourceGetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSmartlockAuthsResourceGetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSmartlockAuthsResourceGetGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /smartlock/{smartlockId}/auth] SmartlockAuthsResource_get_get", response, response.Code())
	}
}

// NewSmartlockAuthsResourceGetGetOK creates a SmartlockAuthsResourceGetGetOK with default headers values
func NewSmartlockAuthsResourceGetGetOK() *SmartlockAuthsResourceGetGetOK {
	return &SmartlockAuthsResourceGetGetOK{}
}

/*
SmartlockAuthsResourceGetGetOK describes a response with status code 200, with default header values.

successful operation
*/
type SmartlockAuthsResourceGetGetOK struct {
	Payload []*models.SmartlockAuth
}

// IsSuccess returns true when this smartlock auths resource get get o k response has a 2xx status code
func (o *SmartlockAuthsResourceGetGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this smartlock auths resource get get o k response has a 3xx status code
func (o *SmartlockAuthsResourceGetGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock auths resource get get o k response has a 4xx status code
func (o *SmartlockAuthsResourceGetGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this smartlock auths resource get get o k response has a 5xx status code
func (o *SmartlockAuthsResourceGetGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock auths resource get get o k response a status code equal to that given
func (o *SmartlockAuthsResourceGetGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the smartlock auths resource get get o k response
func (o *SmartlockAuthsResourceGetGetOK) Code() int {
	return 200
}

func (o *SmartlockAuthsResourceGetGetOK) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth][%d] smartlockAuthsResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SmartlockAuthsResourceGetGetOK) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth][%d] smartlockAuthsResourceGetGetOK  %+v", 200, o.Payload)
}

func (o *SmartlockAuthsResourceGetGetOK) GetPayload() []*models.SmartlockAuth {
	return o.Payload
}

func (o *SmartlockAuthsResourceGetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSmartlockAuthsResourceGetGetUnauthorized creates a SmartlockAuthsResourceGetGetUnauthorized with default headers values
func NewSmartlockAuthsResourceGetGetUnauthorized() *SmartlockAuthsResourceGetGetUnauthorized {
	return &SmartlockAuthsResourceGetGetUnauthorized{}
}

/*
SmartlockAuthsResourceGetGetUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type SmartlockAuthsResourceGetGetUnauthorized struct {
}

// IsSuccess returns true when this smartlock auths resource get get unauthorized response has a 2xx status code
func (o *SmartlockAuthsResourceGetGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock auths resource get get unauthorized response has a 3xx status code
func (o *SmartlockAuthsResourceGetGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock auths resource get get unauthorized response has a 4xx status code
func (o *SmartlockAuthsResourceGetGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock auths resource get get unauthorized response has a 5xx status code
func (o *SmartlockAuthsResourceGetGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock auths resource get get unauthorized response a status code equal to that given
func (o *SmartlockAuthsResourceGetGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the smartlock auths resource get get unauthorized response
func (o *SmartlockAuthsResourceGetGetUnauthorized) Code() int {
	return 401
}

func (o *SmartlockAuthsResourceGetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth][%d] smartlockAuthsResourceGetGetUnauthorized ", 401)
}

func (o *SmartlockAuthsResourceGetGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth][%d] smartlockAuthsResourceGetGetUnauthorized ", 401)
}

func (o *SmartlockAuthsResourceGetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSmartlockAuthsResourceGetGetForbidden creates a SmartlockAuthsResourceGetGetForbidden with default headers values
func NewSmartlockAuthsResourceGetGetForbidden() *SmartlockAuthsResourceGetGetForbidden {
	return &SmartlockAuthsResourceGetGetForbidden{}
}

/*
SmartlockAuthsResourceGetGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SmartlockAuthsResourceGetGetForbidden struct {
}

// IsSuccess returns true when this smartlock auths resource get get forbidden response has a 2xx status code
func (o *SmartlockAuthsResourceGetGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smartlock auths resource get get forbidden response has a 3xx status code
func (o *SmartlockAuthsResourceGetGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smartlock auths resource get get forbidden response has a 4xx status code
func (o *SmartlockAuthsResourceGetGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this smartlock auths resource get get forbidden response has a 5xx status code
func (o *SmartlockAuthsResourceGetGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this smartlock auths resource get get forbidden response a status code equal to that given
func (o *SmartlockAuthsResourceGetGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the smartlock auths resource get get forbidden response
func (o *SmartlockAuthsResourceGetGetForbidden) Code() int {
	return 403
}

func (o *SmartlockAuthsResourceGetGetForbidden) Error() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth][%d] smartlockAuthsResourceGetGetForbidden ", 403)
}

func (o *SmartlockAuthsResourceGetGetForbidden) String() string {
	return fmt.Sprintf("[GET /smartlock/{smartlockId}/auth][%d] smartlockAuthsResourceGetGetForbidden ", 403)
}

func (o *SmartlockAuthsResourceGetGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
