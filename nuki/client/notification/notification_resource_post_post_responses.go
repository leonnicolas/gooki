// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/leonnicolas/gooki/nuki/models"
)

// NotificationResourcePostPostReader is a Reader for the NotificationResourcePostPost structure.
type NotificationResourcePostPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationResourcePostPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotificationResourcePostPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationResourcePostPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationResourcePostPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationResourcePostPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /notification/{notificationId}] NotificationResource_post_post", response, response.Code())
	}
}

// NewNotificationResourcePostPostOK creates a NotificationResourcePostPostOK with default headers values
func NewNotificationResourcePostPostOK() *NotificationResourcePostPostOK {
	return &NotificationResourcePostPostOK{}
}

/*
NotificationResourcePostPostOK describes a response with status code 200, with default header values.

successful operation
*/
type NotificationResourcePostPostOK struct {
	Payload *models.Notification
}

// IsSuccess returns true when this notification resource post post o k response has a 2xx status code
func (o *NotificationResourcePostPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notification resource post post o k response has a 3xx status code
func (o *NotificationResourcePostPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource post post o k response has a 4xx status code
func (o *NotificationResourcePostPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notification resource post post o k response has a 5xx status code
func (o *NotificationResourcePostPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource post post o k response a status code equal to that given
func (o *NotificationResourcePostPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the notification resource post post o k response
func (o *NotificationResourcePostPostOK) Code() int {
	return 200
}

func (o *NotificationResourcePostPostOK) Error() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostOK  %+v", 200, o.Payload)
}

func (o *NotificationResourcePostPostOK) String() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostOK  %+v", 200, o.Payload)
}

func (o *NotificationResourcePostPostOK) GetPayload() *models.Notification {
	return o.Payload
}

func (o *NotificationResourcePostPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationResourcePostPostBadRequest creates a NotificationResourcePostPostBadRequest with default headers values
func NewNotificationResourcePostPostBadRequest() *NotificationResourcePostPostBadRequest {
	return &NotificationResourcePostPostBadRequest{}
}

/*
NotificationResourcePostPostBadRequest describes a response with status code 400, with default header values.

Invalid parameter given
*/
type NotificationResourcePostPostBadRequest struct {
}

// IsSuccess returns true when this notification resource post post bad request response has a 2xx status code
func (o *NotificationResourcePostPostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notification resource post post bad request response has a 3xx status code
func (o *NotificationResourcePostPostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource post post bad request response has a 4xx status code
func (o *NotificationResourcePostPostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this notification resource post post bad request response has a 5xx status code
func (o *NotificationResourcePostPostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource post post bad request response a status code equal to that given
func (o *NotificationResourcePostPostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the notification resource post post bad request response
func (o *NotificationResourcePostPostBadRequest) Code() int {
	return 400
}

func (o *NotificationResourcePostPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostBadRequest ", 400)
}

func (o *NotificationResourcePostPostBadRequest) String() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostBadRequest ", 400)
}

func (o *NotificationResourcePostPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationResourcePostPostUnauthorized creates a NotificationResourcePostPostUnauthorized with default headers values
func NewNotificationResourcePostPostUnauthorized() *NotificationResourcePostPostUnauthorized {
	return &NotificationResourcePostPostUnauthorized{}
}

/*
NotificationResourcePostPostUnauthorized describes a response with status code 401, with default header values.

Not authorized
*/
type NotificationResourcePostPostUnauthorized struct {
}

// IsSuccess returns true when this notification resource post post unauthorized response has a 2xx status code
func (o *NotificationResourcePostPostUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notification resource post post unauthorized response has a 3xx status code
func (o *NotificationResourcePostPostUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource post post unauthorized response has a 4xx status code
func (o *NotificationResourcePostPostUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this notification resource post post unauthorized response has a 5xx status code
func (o *NotificationResourcePostPostUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource post post unauthorized response a status code equal to that given
func (o *NotificationResourcePostPostUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the notification resource post post unauthorized response
func (o *NotificationResourcePostPostUnauthorized) Code() int {
	return 401
}

func (o *NotificationResourcePostPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostUnauthorized ", 401)
}

func (o *NotificationResourcePostPostUnauthorized) String() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostUnauthorized ", 401)
}

func (o *NotificationResourcePostPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationResourcePostPostForbidden creates a NotificationResourcePostPostForbidden with default headers values
func NewNotificationResourcePostPostForbidden() *NotificationResourcePostPostForbidden {
	return &NotificationResourcePostPostForbidden{}
}

/*
NotificationResourcePostPostForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NotificationResourcePostPostForbidden struct {
}

// IsSuccess returns true when this notification resource post post forbidden response has a 2xx status code
func (o *NotificationResourcePostPostForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notification resource post post forbidden response has a 3xx status code
func (o *NotificationResourcePostPostForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notification resource post post forbidden response has a 4xx status code
func (o *NotificationResourcePostPostForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this notification resource post post forbidden response has a 5xx status code
func (o *NotificationResourcePostPostForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this notification resource post post forbidden response a status code equal to that given
func (o *NotificationResourcePostPostForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the notification resource post post forbidden response
func (o *NotificationResourcePostPostForbidden) Code() int {
	return 403
}

func (o *NotificationResourcePostPostForbidden) Error() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostForbidden ", 403)
}

func (o *NotificationResourcePostPostForbidden) String() string {
	return fmt.Sprintf("[POST /notification/{notificationId}][%d] notificationResourcePostPostForbidden ", 403)
}

func (o *NotificationResourcePostPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
