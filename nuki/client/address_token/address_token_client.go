// Code generated by go-swagger; DO NOT EDIT.

package address_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new address token API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for address token API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	AddressTokenRedeemResourceGetGet(params *AddressTokenRedeemResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressTokenRedeemResourceGetGetOK, error)

	AddressTokenRedeemResourcePostPost(params *AddressTokenRedeemResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressTokenRedeemResourcePostPostNoContent, error)

	AddressTokenResourceGetGet(params *AddressTokenResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressTokenResourceGetGetOK, error)

	AddressTokensResourceGetGet(params *AddressTokensResourceGetGetParams, opts ...ClientOption) (*AddressTokensResourceGetGetOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
AddressTokenRedeemResourceGetGet gives an redeemed address token
*/
func (a *Client) AddressTokenRedeemResourceGetGet(params *AddressTokenRedeemResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressTokenRedeemResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressTokenRedeemResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressTokenRedeemResource_get_get",
		Method:             "GET",
		PathPattern:        "/address/token/{id}/redeem",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressTokenRedeemResourceGetGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressTokenRedeemResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressTokenRedeemResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressTokenRedeemResourcePostPost redeems an address token
*/
func (a *Client) AddressTokenRedeemResourcePostPost(params *AddressTokenRedeemResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressTokenRedeemResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressTokenRedeemResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressTokenRedeemResource_post_post",
		Method:             "POST",
		PathPattern:        "/address/token/{id}/redeem",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressTokenRedeemResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressTokenRedeemResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressTokenRedeemResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressTokenResourceGetGet gives some info about address token
*/
func (a *Client) AddressTokenResourceGetGet(params *AddressTokenResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressTokenResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressTokenResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressTokenResource_get_get",
		Method:             "GET",
		PathPattern:        "/address/token/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressTokenResourceGetGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressTokenResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressTokenResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressTokensResourceGetGet gets a list of address tokens
*/
func (a *Client) AddressTokensResourceGetGet(params *AddressTokensResourceGetGetParams, opts ...ClientOption) (*AddressTokensResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressTokensResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressTokensResource_get_get",
		Method:             "GET",
		PathPattern:        "/address/{addressId}/token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressTokensResourceGetGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressTokensResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressTokensResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
