// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountConfig account config
//
// swagger:model Account.Config
type AccountConfig struct {

	// The alexa pin - used by alexa for unlock actions
	// Required: true
	AlexaPin *string `json:"alexaPin"`

	// The google smart home pin - used for unlock actions
	// Required: true
	GactionsHomePin *string `json:"gactionsHomePin"`

	// The opt enabled date
	// Format: date-time
	OtpEnabledDate strfmt.DateTime `json:"otpEnabledDate,omitempty"`
}

// Validate validates this account config
func (m *AccountConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlexaPin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGactionsHomePin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOtpEnabledDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountConfig) validateAlexaPin(formats strfmt.Registry) error {

	if err := validate.Required("alexaPin", "body", m.AlexaPin); err != nil {
		return err
	}

	return nil
}

func (m *AccountConfig) validateGactionsHomePin(formats strfmt.Registry) error {

	if err := validate.Required("gactionsHomePin", "body", m.GactionsHomePin); err != nil {
		return err
	}

	return nil
}

func (m *AccountConfig) validateOtpEnabledDate(formats strfmt.Registry) error {
	if swag.IsZero(m.OtpEnabledDate) { // not required
		return nil
	}

	if err := validate.FormatOf("otpEnabledDate", "body", "date-time", m.OtpEnabledDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this account config based on context it is used
func (m *AccountConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AccountConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountConfig) UnmarshalBinary(b []byte) error {
	var res AccountConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
