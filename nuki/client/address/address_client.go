// Code generated by go-swagger; DO NOT EDIT.

package address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new address API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for address API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	AddressResourceDeleteDelete(params *AddressResourceDeleteDeleteParams, opts ...ClientOption) (*AddressResourceDeleteDeleteNoContent, error)

	AddressResourcePostPost(params *AddressResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressResourcePostPostNoContent, error)

	AddressUnitResourceDeleteDelete(params *AddressUnitResourceDeleteDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitResourceDeleteDeleteOK, error)

	AddressUnitsResourceDeleteDelete(params *AddressUnitsResourceDeleteDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitsResourceDeleteDeleteOK, error)

	AddressUnitsResourceGetGet(params *AddressUnitsResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitsResourceGetGetOK, error)

	AddressUnitsResourcePutPut(params *AddressUnitsResourcePutPutParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitsResourcePutPutOK, error)

	AddressesResourceGetGet(params *AddressesResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressesResourceGetGetOK, error)

	AddressesResourcePutPut(params *AddressesResourcePutPutParams, opts ...ClientOption) (*AddressesResourcePutPutOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
AddressResourceDeleteDelete deletes an address
*/
func (a *Client) AddressResourceDeleteDelete(params *AddressResourceDeleteDeleteParams, opts ...ClientOption) (*AddressResourceDeleteDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressResourceDeleteDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressResource_delete_delete",
		Method:             "DELETE",
		PathPattern:        "/address/{addressId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressResourceDeleteDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressResourceDeleteDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressResource_delete_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressResourcePostPost updates an address
*/
func (a *Client) AddressResourcePostPost(params *AddressResourcePostPostParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressResourcePostPostNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressResourcePostPostParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressResource_post_post",
		Method:             "POST",
		PathPattern:        "/address/{addressId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressResourcePostPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressResourcePostPostNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressResource_post_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressUnitResourceDeleteDelete deletes an address unit
*/
func (a *Client) AddressUnitResourceDeleteDelete(params *AddressUnitResourceDeleteDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitResourceDeleteDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressUnitResourceDeleteDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressUnitResource_delete_delete",
		Method:             "DELETE",
		PathPattern:        "/address/{addressId}/unit/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressUnitResourceDeleteDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressUnitResourceDeleteDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressUnitResource_delete_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressUnitsResourceDeleteDelete deletes address units asynchronously
*/
func (a *Client) AddressUnitsResourceDeleteDelete(params *AddressUnitsResourceDeleteDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitsResourceDeleteDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressUnitsResourceDeleteDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressUnitsResource_delete_delete",
		Method:             "DELETE",
		PathPattern:        "/address/{addressId}/unit",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressUnitsResourceDeleteDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressUnitsResourceDeleteDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressUnitsResource_delete_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressUnitsResourceGetGet gets a list of address units
*/
func (a *Client) AddressUnitsResourceGetGet(params *AddressUnitsResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitsResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressUnitsResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressUnitsResource_get_get",
		Method:             "GET",
		PathPattern:        "/address/{addressId}/unit",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressUnitsResourceGetGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressUnitsResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressUnitsResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressUnitsResourcePutPut creates an address unit
*/
func (a *Client) AddressUnitsResourcePutPut(params *AddressUnitsResourcePutPutParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressUnitsResourcePutPutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressUnitsResourcePutPutParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressUnitsResource_put_put",
		Method:             "PUT",
		PathPattern:        "/address/{addressId}/unit",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressUnitsResourcePutPutReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressUnitsResourcePutPutOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressUnitsResource_put_put: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressesResourceGetGet gets a list of addresses
*/
func (a *Client) AddressesResourceGetGet(params *AddressesResourceGetGetParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AddressesResourceGetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressesResourceGetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressesResource_get_get",
		Method:             "GET",
		PathPattern:        "/address",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressesResourceGetGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressesResourceGetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressesResource_get_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AddressesResourcePutPut creates an address
*/
func (a *Client) AddressesResourcePutPut(params *AddressesResourcePutPutParams, opts ...ClientOption) (*AddressesResourcePutPutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddressesResourcePutPutParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "AddressesResource_put_put",
		Method:             "PUT",
		PathPattern:        "/address",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddressesResourcePutPutReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddressesResourcePutPutOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for AddressesResource_put_put: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
